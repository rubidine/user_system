# Copyright (c) 2008 Todd Willey <todd@rubidine.com>
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
# 
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE

# This file was generated by app_extension_generator

# load Dispatcher if not present yet
unless defined?(ActionController) and defined?(ActionController::Dispatcher)
  require 'action_controller/dispatcher'
end

# Routing Extension
require File.join(File.dirname(__FILE__), 'user_system_routing_extension')
ActionController::Routing::RouteSet.send :include, UserSystemRoutingExtension

# Dependency reload mechanism
require File.join(File.dirname(__FILE__), 'user_system_dependency_extension')
ActiveSupport::Dependencies.extend UserSystemDependencyExtension

# Load paths go after rails app's own lib/, before previously loaded plugins
ali = $LOAD_PATH.index(File.join(RAILS_ROOT, 'lib')) || 0
paths = [
  File.join(File.dirname(__FILE__), '..', 'app', 'controllers'),
  File.join(File.dirname(__FILE__), '..', 'app', 'helpers'),
  File.join(File.dirname(__FILE__), '..', 'app', 'models'),
  File.join(File.dirname(__FILE__), '..', 'lib')
]
paths.each do |p|
  $LOAD_PATH.insert(ali + 1, p)
  ActiveSupport::Dependencies.load_paths << p
end

ActionController::Base.prepend_view_path File.join(File.dirname(__FILE__), '..', 'app', 'views')

# copy in assets
require 'fileutils'
['javascripts', 'stylesheets', 'images'].each do |type|
  r_path = File.join(RAILS_ROOT, 'public', type, 'user_system')
  p_path = File.join(File.dirname(__FILE__), '..', 'public', type)
  unless File.directory?(r_path)
    FileUtils.mkdir_p(r_path)
  end
  Dir["#{p_path}/*"].each do |asset|
    unless File.exist?(File.join(r_path, File.basename(asset)))
      FileUtils.copy(asset, r_path)
    end
  end
end
